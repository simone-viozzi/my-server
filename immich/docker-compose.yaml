name: immich

services:
  immich-server:
    container_name: immich_server
    image: ghcr.io/immich-app/immich-server:${IMMICH_VERSION:-release}
    volumes:
      - immich-upload:/usr/src/app/upload
      - /etc/localtime:/etc/localtime:ro
    env_file:
      - .env
    depends_on:
      - redis
      - database
    networks:
      proxy:
      immich:
      homepage-net:
    logging:
      driver: "journald"
      options:
        tag: "immich-server"
    labels:
      traefik.enable: "true"
      traefik.docker.network: proxy
      traefik.http.routers.media-immich-api.rule: Host(`${IMMICH_DOMAIN}`)
      traefik.http.services.media-immich-api.loadbalancer.server.port: "2283"

      traefik.http.routers.media-immich-api.entrypoints: websecure
      traefik.http.routers.media-immich-api.tls: "true"
      traefik.http.routers.media-immich-api.tls.certresolver: leresolver

      # set watchtower to monitor only and do not perform the update
      com.centurylinklabs.watchtower.monitor-only: "true"

      homepage.group: Media
      homepage.name: Immich
      homepage.icon: immich.svg
      homepage.href: https://${IMMICH_DOMAIN}
    restart: unless-stopped

  immich-machine-learning:
    container_name: immich_machine_learning
    # For hardware acceleration, add one of -[armnn, cuda, openvino] to the image tag.
    # Example tag: ${IMMICH_VERSION:-release}-cuda
    image: ghcr.io/immich-app/immich-machine-learning:${IMMICH_VERSION:-release}
    # extends: # uncomment this section for hardware acceleration - see https://immich.app/docs/features/ml-hardware-acceleration
    #   file: hwaccel.ml.yml
    #   service: cpu # set to one of [armnn, cuda, openvino, openvino-wsl] for accelerated inference - use the `-wsl` version for WSL2 where applicable
    volumes:
      - model-cache:/cache
    env_file:
      - .env
    networks:
      immich:
    labels:
      # set watchtower to monitor only and do not perform the update
      com.centurylinklabs.watchtower.monitor-only: "true"
    restart: unless-stopped
    logging:
      driver: "local"
    #deploy:
    #  resources:
    #    limits:
    #      cpus: '5'

  redis:
    container_name: immich_redis
    image: docker.io/redis:6.2-alpine@sha256:328fe6a5822256d065debb36617a8169dbfbd77b797c525288e465f56c1d392b
    networks:
      immich:
    logging:
      driver: none
    healthcheck:
      test: redis-cli ping || exit 1
    labels:
      # set watchtower to monitor only and do not perform the update
      com.centurylinklabs.watchtower.monitor-only: "true"
    restart: unless-stopped

  database:
    container_name: immich_postgres
    image: docker.io/tensorchord/pgvecto-rs:pg14-v0.2.0@sha256:90724186f0a3517cf6914295b5ab410db9ce23190a2d9d0b9dd6463e3fa298f0
    env_file:
      - .env
    environment:
      POSTGRES_PASSWORD: ${DB_PASSWORD}
      POSTGRES_USER: ${DB_USERNAME}
      POSTGRES_DB: ${DB_DATABASE_NAME}
      POSTGRES_INITDB_ARGS: '--data-checksums'
      PG_DATA: /var/lib/postgresql/data
    volumes:
      - immich-pgdata:/var/lib/postgresql/data
    healthcheck:
      test: pg_isready --dbname='${DB_DATABASE_NAME}' --username='${DB_USERNAME}' || exit 1; Chksum="$$(psql --dbname='${DB_DATABASE_NAME}' --username='${DB_USERNAME}' --tuples-only --no-align --command='SELECT COALESCE(SUM(checksum_failures), 0) FROM pg_stat_database')"; echo "checksum failure count is $$Chksum"; [ "$$Chksum" = '0' ] || exit 1
      interval: 5m
      start_interval: 30s
      start_period: 5m
    command: [ 'postgres', '-c', 'shared_preload_libraries=vectors.so', '-c', 'search_path="$$user", public, vectors', '-c', 'logging_collector=on', '-c', 'max_wal_size=2GB', '-c', 'shared_buffers=512MB', '-c', 'wal_compression=on' ]

    networks:
      immich:
    logging:
      driver: "local"
    labels:
      # set watchtower to monitor only and do not perform the update
      com.centurylinklabs.watchtower.monitor-only: "true"
    restart: unless-stopped

volumes:
  immich-pgdata:
    external: true
  immich-upload:
    external: true
  model-cache:


networks:
  proxy:
    external: true
  immich:
  homepage-net:
    external: true
