name: immich

services:
  immich-server:
    container_name: immich_server
    image: ghcr.io/immich-app/immich-server:${IMMICH_VERSION:-release}
    volumes:
      - immich-upload:/usr/src/app/upload
      - /etc/localtime:/etc/localtime:ro
    env_file:
      - .env
    depends_on:
      - redis
      - database
    networks:
      proxy:
      immich:
      homepage-net:
    logging:
      driver: "journald"
      options:
        tag: "immich-server"
    labels:
      traefik.enable: "true"
      traefik.docker.network: proxy
      traefik.http.routers.media-immich-api.rule: Host(`${IMMICH_DOMAIN}`)
      traefik.http.services.media-immich-api.loadbalancer.server.port: "2283"

      traefik.http.routers.media-immich-api.entrypoints: websecure
      traefik.http.routers.media-immich-api.tls: "true"
      traefik.http.routers.media-immich-api.tls.certresolver: leresolver

      # set watchtower to monitor only and do not perform the update
      com.centurylinklabs.watchtower.monitor-only: "true"

      homepage.group: Media
      homepage.name: Immich
      homepage.icon: immich.svg
      homepage.href: https://${IMMICH_DOMAIN}
    restart: unless-stopped

  immich-machine-learning:
    container_name: immich_machine_learning
    # For hardware acceleration, add one of -[armnn, cuda, rocm, openvino, rknn] to the image tag.
    # Example tag: ${IMMICH_VERSION:-release}-cuda
    image: ghcr.io/immich-app/immich-machine-learning:${IMMICH_VERSION:-release}
    # extends: # uncomment this section for hardware acceleration - see https://immich.app/docs/features/ml-hardware-acceleration
    #   file: hwaccel.ml.yml
    #   service: cpu # set to one of [armnn, cuda, rocm, openvino, openvino-wsl, rknn] for accelerated inference - use the `-wsl` version for WSL2 where applicable
    volumes:
      - model-cache:/cache
    env_file:
      - .env
    networks:
      immich:
    healthcheck:
      disable: false
    labels:
      # set watchtower to monitor only and do not perform the update
      com.centurylinklabs.watchtower.monitor-only: "true"
    restart: unless-stopped
    logging:
      driver: "local"
      options:
        max-size: "10m"
        max-file: "5"
    #deploy:
    #  resources:
    #    limits:
    #      cpus: '5'

  redis:
    container_name: immich_redis
    image: docker.io/valkey/valkey:8-bookworm@sha256:fec42f399876eb6faf9e008570597741c87ff7662a54185593e74b09ce83d177
    networks:
      immich:
    logging:
      driver: json-file
      options:
        max-size: "1m"
        max-file: "2"
    healthcheck:
      test: redis-cli ping || exit 1
    labels:
      # set watchtower to monitor only and do not perform the update
      com.centurylinklabs.watchtower.monitor-only: "true"
    restart: unless-stopped

  database:
    container_name: immich_postgres
    image: ghcr.io/immich-app/postgres:14-vectorchord0.4.1-pgvectors0.2.0
    env_file:
      - .env
    environment:
      POSTGRES_PASSWORD: ${DB_PASSWORD}
      POSTGRES_USER: ${DB_USERNAME}
      POSTGRES_DB: ${DB_DATABASE_NAME}
      POSTGRES_INITDB_ARGS: '--data-checksums'
      PG_DATA: /var/lib/postgresql/data
      DB_STORAGE_TYPE: 'HDD'
    volumes:
      - immich-pgdata:/var/lib/postgresql/data
    networks:
      immich:
    logging:
      driver: "local"
      options:
        max-size: "10m"
        max-file: "5"
    labels:
      # set watchtower to monitor only and do not perform the update
      com.centurylinklabs.watchtower.monitor-only: "true"
    restart: unless-stopped

volumes:
  immich-pgdata:
    external: true
  immich-upload:
    external: true
  model-cache:


networks:
  proxy:
    external: true
  immich:
  homepage-net:
    external: true
