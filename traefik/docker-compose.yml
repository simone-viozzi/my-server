services:
  traefik:
    image: traefik:latest
    container_name: traefik
    networks:
      proxy:
        aliases:
          - ${OCIS_DOMAIN}
          - ${WOPISERVER_DOMAIN}
          - ${COLLABORA_DOMAIN}
          - ${ONLYOFFICE_DOMAIN}
          - ${JELLYFIN_DOMAIN}
          - ${WALLABAG_DOMAIN}
      homepage-net:
    command:
      - '--api=true'
      #- '--pilot.dashboard=false'
      - '--global.sendAnonymousUsage=false'
      - '--global.checkNewVersion=false'

      - '--log=true'
      - '--log.level=INFO'

      - '--providers.docker=true'
      #- --providers.docker.endpoint=unix:///var/run/docker.sock
      - '--providers.docker.exposedByDefault=false'

      #- --certificatesresolvers.leresolver.acme.caserver=https://acme-staging-v02.api.letsencrypt.org/directory
      - --certificatesresolvers.leresolver.acme.email=${EMAIL}
      - --certificatesresolvers.leresolver.acme.storage=/certs/acme.json
      - --certificatesresolvers.leresolver.acme.tlschallenge=true

      - '--accesslog=true'
      - '--accessLog.filePath=/var/log/access.log'
      - '--accessLog.filters.statusCodes=400-499'

      - '--entryPoints.web=true'
      - '--entrypoints.web.address=:80'

      - '--entryPoints.websecure=true'
      - '--entrypoints.websecure.address=:443'

      - '--entryPoints.web.http.redirections.entryPoint.to=websecure'
      - '--entryPoints.web.http.redirections.entryPoint.scheme=https'

      #- '--entryPoints.web.forwardedHeaders.insecure=false'
      #- '--entryPoints.web.proxyProtocol.insecure=false'

      #- '--entryPoints.websecure.forwardedHeaders.insecure=false'
      #- '--entryPoints.websecure.proxyProtocol.insecure=false'

      #- '--entryPoints.http.address=:8080/tcp'

      ## Please see the Forwarded Header Trust section of the Authelia Traefik Integration documentation.
      # - '--entryPoints.http.forwardedHeaders.trustedIPs=10.0.0.0/8,172.16.0.0/12,192.168.0.0/16,fc00::/7'
      # - '--entryPoints.http.proxyProtocol.trustedIPs=10.0.0.0/8,172.16.0.0/12,192.168.0.0/16,fc00::/7'


      #- '--entryPoints.https.address=:8443/tcp'
      ## Please see the Forwarded Header Trust section of the Authelia Traefik Integration documentation.
      # - '--entryPoints.https.forwardedHeaders.trustedIPs=10.0.0.0/8,172.16.0.0/12,192.168.0.0/16,fc00::/7'
      # - '--entryPoints.https.proxyProtocol.trustedIPs=10.0.0.0/8,172.16.0.0/12,192.168.0.0/16,fc00::/7'

    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./logs:/var/log
      - /var/run/docker.sock:/var/run/docker.sock:ro
      - certs:/certs/
    labels:
      traefik.enable: "true"
      traefik.docker.network: proxy

      traefik.http.routers.traefik.rule: "Host(`${TRAEFIK_DOMAIN}`)"
      traefik.http.routers.traefik.entrypoints: websecure

      traefik.http.routers.traefik.tls: "true"
      traefik.http.routers.traefik.tls.certresolver: leresolver

      traefik.http.routers.traefik.service: api@internal

      # add auth middleware
      #traefik.http.routers.traefik.middlewares: authelia@docker

      traefik.http.routers.traefik.middlewares: authentik-auth@docker

      # Middleware definition for Authentik authentication
      traefik.http.middlewares.authentik-auth.forwardauth.address: "https://${AUTHENTIK_DOMAIN}/application/o/forward_auth/"
      traefik.http.middlewares.authentik-auth.forwardauth.trustForwardHeader: "true"
      traefik.http.middlewares.authentik-auth.forwardauth.authResponseHeaders: "X-Auth-User"

      #traefik.http.routers.traefik.middlewares: traefik-auth
      # you need to replace $ with $$ !
      #traefik.http.middlewares.traefik-auth.basicauth.users: "${BASIC_AUTH}"

      # global redirect to https
      #traefik.http.routers.http-catchall.rule: hostregexp(`{host:.+}`)
      #traefik.http.routers.http-catchall.entrypoints: web
      #traefik.http.routers.http-catchall.middlewares: redirect-to-https

      # middleware redirect
      traefik.http.middlewares.redirect-to-https.redirectscheme.scheme: https

      homepage.group: Network
      homepage.name: Traefik
      homepage.icon: traefik.svg
      homepage.href: https://${TRAEFIK_DOMAIN}
    logging:
      driver: "local"
    restart: unless-stopped

  authentik-proxy:
    image: ghcr.io/goauthentik/proxy
    ports:
      - 9000:9000
      - 9443:9443
    environment:
      AUTHENTIK_HOST: https://your-authentik.tld
      AUTHENTIK_INSECURE: "false"
      AUTHENTIK_TOKEN: token-generated-by-authentik
      # Starting with 2021.9, you can optionally set this too
      # when authentik_host for internal communication doesn't match the public URL
      # AUTHENTIK_HOST_BROWSER: https://external-domain.tld
    labels:
      traefik.enable: true
      traefik.port: 9000
      traefik.http.routers.authentik.rule: Host(`app.company`) && PathPrefix(`/outpost.goauthentik.io/`)
      # `authentik-proxy` refers to the service name in the compose file.
      traefik.http.middlewares.authentik.forwardauth.address: http://authentik-proxy:9000/outpost.goauthentik.io/auth/traefik
      traefik.http.middlewares.authentik.forwardauth.trustForwardHeader: true
      traefik.http.middlewares.authentik.forwardauth.authResponseHeaders: X-authentik-username,X-authentik-groups,X-authentik-email,X-authentik-name,X-authentik-uid,X-authentik-jwt,X-authentik-meta-jwks,X-authentik-meta-outpost,X-authentik-meta-provider,X-authentik-meta-app,X-authentik-meta-version
    restart: unless-stopped


volumes:
  certs:


networks:
  proxy:
    external: true
  homepage-net:
    external: true
